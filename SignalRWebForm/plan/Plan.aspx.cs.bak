using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using DB5 = Erun360.BLL.DB5;
using DBM5 = Erun360.Model.DB5;
using System.Text;
using Utils;

public partial class plan_Plan : System.Web.UI.Page
{
    private string idCode = string.Empty;
    protected void Page_Load(object sender, EventArgs e)
    {
        idCode = TypeChangeDefault.NullToString(Request.QueryString["s"], "");
        if (string.IsNullOrEmpty(idCode))
        {
            AlertHelper.JQAlertGo("请选择训练目标！", "/plan/Default.aspx", false);
            return;
        }
        if (!IsPostBack)
        {
            DataTable dt = new DB5.tblPlan().GetList(0, "cPanCode='" + idCode + "'", "iweek,iDay,iOrder").Tables[0];
            if (dt.Rows.Count == 0)
            {
                AlertHelper.JQAlertGo("操作有误，请重新选择！", "/plan/Default.aspx", false);
                return;
            }
            int iWeek = TypeChangeDefault.NullToInt(idCode.Substring(4, 2), 0);
            if (iWeek == 0)
            {
                AlertHelper.JQAlertGo("操作有误，请重新选择！", "/plan/Default.aspx", false);
                return;
            }
            StringBuilder sb = new StringBuilder();
            for (int j = 1; j <= iWeek; j++)
            {
                sb.AppendLine("<tr>");
                sb.Append(" <td>Week " + j + "</td>");
                for (int d = 1; d <= 7; d++)
                {
                    sb.Append("<td>" + Select(dt, "iweek='" + j + "' and iDay='" + d + "'", "iOrder") + "</td>");
                }
                sb.AppendLine("</tr>");
            }
            ltlWeek.Text = sb.ToString();
        }
    }
    private string Select(DataTable dt, string filterExpression, string sort)
    {
        StringBuilder sb = new StringBuilder();
        DataRow[] arrayDR = dt.Select(filterExpression, sort);

        foreach (DataRow dr in arrayDR)
        {
            int iType = TypeChangeDefault.NullToInt(dr[5].ToString(), 0);
            int iStrong = TypeChangeDefault.NullToInt(dr[7].ToString(), 0);
            sb.Append(Strong(iStrong));
            switch (iType)
            {
                case 0:
                    break;
                case 1: sb.Append(dr[6].ToString() + " min");
                    break;
                case 2: sb.Append(dr[8].ToString());
                    break;
                case 3: sb.Append("<br/>休息");
                    break;
                case 4: sb.Append(dr[6].ToString());
                    break;

            }
            if (iStrong == 1)
            { sb.Append(" GR<br/>"); }
            else if (iStrong == 2)
            { sb.Append(" GE<br/>"); }
            else if (iStrong == 3)
            { sb.Append(" OR<br/>"); }
            else if (iStrong == 4)
            { sb.Append(" RO<br/>"); }
            sb.Append("</i>");
            //if (dr[5].ToString() == "")
            //{

            //}
            //sb.Append(dr[5].ToString() + "---" + dr[6].ToString() + "---" + dr[7].ToString());
            //Console.WriteLine(dr[0].ToString() + "    " + dr[1].ToString());

        }

        return sb.ToString();
    }
    private string Strong(int iStrong)
    {
        StringBuilder sbStrong = new StringBuilder();
        switch (iStrong)
        {
            case 0: sbStrong.Append("<i class=\"ffffff\">");
                break;
            case 1: sbStrong.Append("<i class=\"c75c81b\" title=\"慢跑速度 60-70% 最大心跳\">");//GR
                break;
            case 2: sbStrong.Append("<i class=\"fcf304\" title=\"中速慢跑速度 70-80% 最大心跳\">");//GE
                break;
            case 3: sbStrong.Append("<i class=\"ff6602\" title=\"中速跑速度 80-90% 最大心跳\">");//OR
                break;
            case 4: sbStrong.Append("<i class=\"dd0705\" title=\"快跑速度 90-95% 最大心跳\">");//RO
                break;

        }
        return sbStrong.ToString();
    }
}